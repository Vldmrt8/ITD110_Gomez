{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITD110_GOMEZ\\\\Frontend\\\\redis-frontend\\\\src\\\\Components\\\\Modal\\\\StudentChart.js\";\nimport React from 'react';\nimport { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nfunction StudentChart({\n  students\n}) {\n  // Group students by gender\n  const genderData = students.reduce((acc, student) => {\n    const existing = acc.find(item => item.name === student.gender);\n    if (existing) {\n      existing.value += 1;\n    } else {\n      acc.push({\n        name: student.gender,\n        value: 1\n      });\n    }\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Student Gender Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 300,\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        data: genderData,\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 100,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        children: genderData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c = StudentChart;\nexport default StudentChart;\nvar _c;\n$RefreshReg$(_c, \"StudentChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Tooltip","Legend","jsxDEV","_jsxDEV","COLORS","StudentChart","students","genderData","reduce","acc","student","existing","find","item","name","gender","value","push","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","cx","cy","outerRadius","fill","dataKey","map","entry","index","length","_c","$RefreshReg$"],"sources":["D:/ITD110_GOMEZ/Frontend/redis-frontend/src/Components/Modal/StudentChart.js"],"sourcesContent":["import React from 'react';\r\nimport { PieChart, Pie, Cell, Tooltip, Legend } from 'recharts';\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nfunction StudentChart({ students }) {\r\n    // Group students by gender\r\n    const genderData = students.reduce((acc, student) => {\r\n        const existing = acc.find(item => item.name === student.gender);\r\n        if (existing) {\r\n            existing.value += 1;\r\n        } else {\r\n            acc.push({ name: student.gender, value: 1 });\r\n        }\r\n        return acc;\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h3>Student Gender Distribution</h3>\r\n            <PieChart width={400} height={300}>\r\n                <Pie data={genderData} cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" dataKey=\"value\">\r\n                    {genderData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                    ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n            </PieChart>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudentChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAE3D,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAChC;EACA,MAAMC,UAAU,GAAGD,QAAQ,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IACjD,MAAMC,QAAQ,GAAGF,GAAG,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKJ,OAAO,CAACK,MAAM,CAAC;IAC/D,IAAIJ,QAAQ,EAAE;MACVA,QAAQ,CAACK,KAAK,IAAI,CAAC;IACvB,CAAC,MAAM;MACHP,GAAG,CAACQ,IAAI,CAAC;QAAEH,IAAI,EAAEJ,OAAO,CAACK,MAAM;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAC;IAChD;IACA,OAAOP,GAAG;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKe,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAChCjB,OAAA;MAAAiB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCrB,OAAA,CAACN,QAAQ;MAAC4B,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,gBAC9BjB,OAAA,CAACL,GAAG;QAAC6B,IAAI,EAAEpB,UAAW;QAACqB,EAAE,EAAC,KAAK;QAACC,EAAE,EAAC,KAAK;QAACC,WAAW,EAAE,GAAI;QAACC,IAAI,EAAC,SAAS;QAACC,OAAO,EAAC,OAAO;QAAAZ,QAAA,EACpFb,UAAU,CAAC0B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACzBhC,OAAA,CAACJ,IAAI;UAAuBgC,IAAI,EAAE3B,MAAM,CAAC+B,KAAK,GAAG/B,MAAM,CAACgC,MAAM;QAAE,GAArD,QAAQD,KAAK,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwC,CACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNrB,OAAA,CAACH,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXrB,OAAA,CAACF,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAACa,EAAA,GA1BQhC,YAAY;AA4BrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}